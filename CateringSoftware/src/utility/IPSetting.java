/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package utility;

import cateringsoftware.DeskFrame;
import cateringsoftware.MainClass;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileReader;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.net.Socket;
import java.sql.Connection;
import java.sql.DriverManager;
import java.util.Properties;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author @JD@
 */
public class IPSetting extends javax.swing.JFrame {
    public Properties property;
    public Connection mainConn = null;
    public Socket socketClient;
    public String dbConproperty = "dbConnection.properties";
    String Syspath = System.getProperty("user.dir");

    /**
     * Creates new form IPSetting
     */
    public IPSetting() {
        initComponents();
        setTitle("IP SETTING");
        this.setIconImage(new ImageIcon(getClass().getResource("/stockmanagementomis/logo.jpg")).getImage());
        getSettingFromFile();
        setIconToPanel();
    }

    private void setIconToPanel() {
        Syspath += File.separator + "Resources" + File.separator + "Images" + File.separator;
        jbtnSet.setIcon(new ImageIcon(Syspath +"set.png"));
        jbtnClose.setIcon(new ImageIcon(Syspath +"close.png"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jbtnSet = new javax.swing.JButton();
        jbtnClose = new javax.swing.JButton();
        jtxtComPort = new javax.swing.JTextField();
        jtxtPort = new javax.swing.JTextField();
        jtxtIP = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(253, 243, 243));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 3, 3, new java.awt.Color(235, 35, 35)));

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel1.setText("IP ADDRESS");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("PORT");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("COMMUNICATION PORT");

        jbtnSet.setBackground(new java.awt.Color(204, 255, 204));
        jbtnSet.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbtnSet.setText("SET");
        jbtnSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSetActionPerformed(evt);
            }
        });
        jbtnSet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jbtnSetKeyReleased(evt);
            }
        });

        jbtnClose.setBackground(new java.awt.Color(204, 255, 204));
        jbtnClose.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbtnClose.setText("CLOSE");
        jbtnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCloseActionPerformed(evt);
            }
        });

        jtxtComPort.setColumns(4);
        jtxtComPort.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jtxtComPort.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(4, 110, 152)));
        jtxtComPort.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtComPortKeyReleased(evt);
            }
        });

        jtxtPort.setColumns(4);
        jtxtPort.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jtxtPort.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(4, 110, 152)));
        jtxtPort.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtPortKeyReleased(evt);
            }
        });

        jtxtIP.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jtxtIP.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(4, 110, 152)));
        jtxtIP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtIPKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtIP, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtComPort, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtPort, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jbtnSet)
                        .addGap(27, 27, 27)
                        .addComponent(jbtnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jbtnClose, jbtnSet});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel2, jLabel3});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtIP, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtPort, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtComPort, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnSet, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jLabel2, jLabel3});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jbtnClose, jbtnSet});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtxtComPortKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtComPortKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jbtnSet.requestFocusInWindow();
        }
    }//GEN-LAST:event_jtxtComPortKeyReleased

    private void jtxtPortKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtPortKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtxtComPort.requestFocusInWindow();
            jtxtComPort.selectAll();
        }
    }//GEN-LAST:event_jtxtPortKeyReleased

    private void jtxtIPKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtIPKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtxtPort.requestFocusInWindow();
            jtxtPort.selectAll();
        }
    }//GEN-LAST:event_jtxtIPKeyReleased

    private void jbtnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCloseActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jbtnCloseActionPerformed

    public Connection getConnection(String db) {
        Connection tempCon = null;
        try {
            ObjectOutputStream oos = new ObjectOutputStream(socketClient.getOutputStream());
            oos.writeObject(db);
            ObjectInputStream ois = new ObjectInputStream(socketClient.getInputStream());
            String conString = (String) ois.readObject();
            tempCon = DriverManager.getConnection(conString);

            ois.close();
            oos.close();
            socketClient.close();
        } catch (Exception ex) {
            System.out.println(ex.getCause());
            System.out.println(ex.getMessage());
        }
        return tempCon;
    }

    private void getSettingFromFile() {
        try {
            property = new Properties();
            property.load(new FileReader(new File(dbConproperty)));

            jtxtPort.setText(property.getProperty("port"));
            jtxtComPort.setText(property.getProperty("commPort"));

            jtxtIP.requestFocusInWindow();
            jtxtIP.selectAll();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    public void getMainConnection() {
        try {
            mainConn = getConnection("Main");
            if (mainConn != null) {
                MainClass.df = new DeskFrame("");
                java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
                MainClass.df.setBounds(screenSize.width / 2 - MainClass.df.getWidth() / 2, screenSize.height / 2 - MainClass.df.getHeight() / 2, MainClass.df.getWidth(), MainClass.df.getHeight());
                MainClass.df.setLocationRelativeTo(null);
                MainClass.df.setContentPane(MainClass.df.tabbedPane);
                MainClass.df.setVisible(true);
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(null, "Unable to connect Server. Please check connection setting", "Connection", JOptionPane.WARNING_MESSAGE);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private void connect() {
        try {
            int ans = JOptionPane.showConfirmDialog(this, "Do you want to change connection setting", "Confirm Setting", JOptionPane.YES_NO_OPTION);
            if (ans == JOptionPane.YES_OPTION) {
                PrintWriter pw = new PrintWriter("dbConnection.properties");
                pw.println("ip="+ jtxtIP.getText());
                pw.println("port="+ jtxtPort.getText());
                pw.println("commPort="+ jtxtComPort.getText());
                pw.println("digit="+ DeskFrame.digit + "");
                pw.close();

                getMainConnection();
            }
        } catch (Exception ex) {
            System.out.println("Error at connection setting in IP Settings"+ ex.getMessage());
        }
        jtxtIP.requestFocusInWindow();
        jtxtIP.selectAll();
    }

    private void jbtnSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSetActionPerformed
        connect();
    }//GEN-LAST:event_jbtnSetActionPerformed

    private void jbtnSetKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtnSetKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            connect();
        }
    }//GEN-LAST:event_jbtnSetKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IPSetting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IPSetting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IPSetting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IPSetting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IPSetting().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jbtnClose;
    private javax.swing.JButton jbtnSet;
    private javax.swing.JTextField jtxtComPort;
    private javax.swing.JTextField jtxtIP;
    private javax.swing.JTextField jtxtPort;
    // End of variables declaration//GEN-END:variables
}